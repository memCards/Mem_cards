package view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import entity.Card;
import entity.User;
import ui.ButtonStyle;

import javax.swing.*;
import java.awt.*;
import java.util.Set;

public class CardsForm extends JPanel {
    private JPanel mainPanel;
    private JList<Card> cardsList;
    private JButton newCardButton;
    private JPanel listPanel;
    private JFrame newCardForm = null;
    private final transient User user;

    public CardsForm(User user) {
        this.user = user;
        $$$setupUI$$$();
        initButtons();
        setButtonStyle();
        initListRenderer();
        this.add(mainPanel);
        this.setVisible(true);
    }

    private void createUIComponents() {
        initList();
    }

    private void initList() {
        DefaultListModel<Card> listModel = new DefaultListModel<>();
        Set<Card> cards = user.getCards();
        cards.forEach(listModel::addElement);
        cardsList = new JList<>(listModel);
    }

    public void updateList(Card card) {
        ((DefaultListModel<Card>) cardsList.getModel()).addElement(card);
    }

    private void initListRenderer() {
        cardsList.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                Component renderer = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                this.setHorizontalAlignment(SwingConstants.CENTER);
                ((JLabel) renderer).setText(((Card) value).getId() + " " + ((Card) value).getQuestion());
                return renderer;
            }
        });
    }

    private void initButtons() {
        newCardButton.addActionListener(e -> {
            if (newCardForm == null) {
                newCardForm = new NewCardForm(user, this);
            }
            FrameLocation.setFrameLocation(newCardForm);
            newCardForm.setVisible(true);
        });
    }

    private void setButtonStyle() {
        ButtonStyle buttonStyle = new ButtonStyle();
        newCardButton.setUI(buttonStyle);
        newCardButton.setBackground(new Color(0xF7A962E0, true));
        newCardButton.setForeground(Color.white);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setMinimumSize(new Dimension(500, 490));
        newCardButton = new JButton();
        newCardButton.setHorizontalAlignment(0);
        newCardButton.setText("Новая карточка");
        mainPanel.add(newCardButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        listPanel = new JPanel();
        listPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.add(listPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(500, 400), null, 0, false));
        cardsList.setAlignmentX(0.0f);
        cardsList.setAlignmentY(0.0f);
        cardsList.setAutoscrolls(true);
        cardsList.setBackground(new Color(-1118482));
        cardsList.setFixedCellHeight(25);
        Font cardsListFont = this.$$$getFont$$$("Arial", Font.BOLD, 22, cardsList.getFont());
        if (cardsListFont != null) cardsList.setFont(cardsListFont);
        cardsList.setForeground(new Color(-16316665));
        cardsList.setLayoutOrientation(0);
        cardsList.setMinimumSize(new Dimension(500, 400));
        cardsList.setSelectionBackground(new Color(-1516824));
        cardsList.setSelectionForeground(new Color(-16777216));
        cardsList.setSelectionMode(0);
        listPanel.add(cardsList, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
