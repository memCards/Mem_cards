package view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import control.CardController;
import entity.Card;
import ui.ButtonStyle;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class CardForm extends JFrame {
    private JLabel questLabel;
    private JTextField questText;
    private JLabel answerLabel;
    private JTextPane answerPane;
    private JPanel mainPanel;
    private JButton editButton;
    private JButton deleteButton;

    private final CardsListForm cardsListForm;
    private final transient Card card;
    private final transient CardController cardController;


    public CardForm(CardsListForm cardsListForm, Card card) {
        this.cardsListForm = cardsListForm;
        this.card = card;
        cardController = new CardController();

        this.setTitle("Карточка");
        this.setContentPane(mainPanel);
        initCardInfo();
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.pack();
        FrameLocation.setFrameLocation(this);
        setVisible(true);
        this.setPreferredSize(new Dimension(300, 350));
        this.setMaximumSize(new Dimension(300, 350));
        this.setMinimumSize(new Dimension(300, 350));

        setupButtons();
    }

    private void initCardInfo() {
        questText.setText(card.getQuestion());
        answerPane.setText(card.getAnswer());
    }

    private void setupButtons() {
        editButton.setUI(new ButtonStyle());
        editButton.setBackground(new Color(0xF7A962E0, true));
        editButton.setForeground(Color.WHITE);
        editButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                new EditForm(card, cardController, cardsListForm);
                dispose();
            }
        });
        deleteButton.setUI(new ButtonStyle());
        deleteButton.setBackground(new Color(0xF7A962E0, true));
        deleteButton.setForeground(Color.WHITE);
        deleteButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                int result = JOptionPane.showConfirmDialog(mainPanel, "Вы уверены, что хотите удалить карточку?");
                if (result == JOptionPane.YES_OPTION) {
                    cardController.deleteCard(card);
                    cardsListForm.updateList();
                    dispose();
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(6, 3, new Insets(0, 0, 0, 0), -1, -1));
        questLabel = new JLabel();
        questLabel.setText("Вопрос");
        mainPanel.add(questLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        mainPanel.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        questText = new JTextField();
        questText.setEditable(false);
        mainPanel.add(questText, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        answerLabel = new JLabel();
        answerLabel.setText("Ответ");
        mainPanel.add(answerLabel, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        answerPane = new JTextPane();
        answerPane.setEditable(false);
        answerPane.putClientProperty("charset", "");
        answerPane.putClientProperty("html.disable", Boolean.FALSE);
        mainPanel.add(answerPane, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(300, 100), null, 0, false));
        editButton = new JButton();
        editButton.setBackground(new Color(-11260055));
        editButton.setText("Редактировать");
        mainPanel.add(editButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deleteButton = new JButton();
        deleteButton.setBackground(new Color(-8708813));
        deleteButton.setText("Удалить");
        mainPanel.add(deleteButton, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
